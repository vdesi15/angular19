:host {
  display: block;
  height: 100%;

  .table-container {
    display: block;
    height: calc(100vh - 250px);
    overflow: hidden;
  }
}

// ðŸ”¥ CRITICAL FIX: Force table layout and column width compliance
:host ::ng-deep .elegant-table {
  
  // ðŸ”¥ MOST IMPORTANT: Force table to use fixed layout
  .p-datatable-table {
    table-layout: fixed !important;
    width: 100% !important;
  }

  // ðŸ”¥ Ensure colgroup widths are respected
  colgroup col {
    // Force the browser to respect the width attribute
    min-width: var(--col-width) !important;
    max-width: var(--col-width) !important;
  }

  font-size: 0.8rem;

  .p-datatable-thead th {
    background-color: var(--surface-100);
    border-bottom: 1px solid var(--surface-border) !important;
    padding: 0.5rem 0.6rem;
    font-weight: 600;
    text-align: left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    // ðŸ”¥ CRITICAL: Don't override width here
    box-sizing: border-box !important;
  }

  // ðŸ”¥ FILTER ROW: Critical fixes for width compliance
  .filter-row th {
    padding: 0.2rem 0.4rem;
    background-color: var(--surface-50);
    border-bottom-width: 2px;
    box-sizing: border-box !important;
    // ðŸ”¥ CRITICAL: Don't set width here, let colgroup handle it
    
    // ðŸ”¥ FIX: p-columnFilter container
    .p-column-filter {
      width: 100% !important;
      box-sizing: border-box !important;
      
      // ðŸ”¥ FIX: Filter input container
      .p-fluid {
        width: 100% !important;
      }
    }

    // ðŸ”¥ ENHANCED: Filter input styling
    .elegant-filter-input {
      width: 100% !important;
      box-sizing: border-box !important;
      font-size: 0.75rem;
      padding: 0.3rem 0.5rem;
      border: 1px solid var(--surface-200);
      border-radius: 4px;
      transition: border-color 0.2s, box-shadow 0.2s;
      min-width: 0 !important; // Allow shrinking
      max-width: 100% !important; // Prevent overflow

      &:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 1px var(--primary-color);
        outline: none;
      }

      &::placeholder {
        color: var(--text-color-secondary);
        font-size: 0.7rem;
      }
    }
  }

  .p-datatable-tbody tr td {
    padding: 0.4rem 0.6rem;
    border-bottom: 1px solid var(--surface-border);
    vertical-align: middle;
    box-sizing: border-box !important;
    // ðŸ”¥ CRITICAL: Cell overflow handling
    overflow: hidden !important;

    .cell-content {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100% !important;
      box-sizing: border-box !important;
    }

    &.clickable-cell {
      color: var(--primary-color);
      cursor: pointer;
      font-weight: 500;
      &:hover {
        .cell-content {
          text-decoration: underline;
        }
      }
    }
  }

  .p-datatable-emptymessage td {
    padding: 2rem;
    text-align: center;
    color: var(--text-color-secondary);
  }
}

// ðŸ”¥ ENHANCED: Hide rows per page dropdown
:host ::ng-deep {
  .p-datatable .p-datatable-wrapper {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .p-paginator {
    position: sticky;
    bottom: 0;
    z-index: 10;
    background: var(--surface-card);
    border-top: 1px solid var(--surface-border);
    margin-top: auto;
    font-size: 0.8rem;
    padding: 0.25rem 0.5rem;

    // ðŸ”¥ HIDE: Rows per page dropdown
    .p-paginator-rpp-options {
      display: none !important;
    }

    .p-dropdown .p-dropdown-panel {
      bottom: 100%;
      top: auto !important;
      margin-bottom: 4px;
    }
  }
}

// ðŸ”¥ DARK MODE: Enhanced support
:host-context(.app-dark) ::ng-deep {
  .elegant-table {
    .p-datatable-thead th {
      background-color: var(--surface-800);
      border-color: var(--surface-700);
    }
    
    .filter-row th {
      background-color: var(--surface-700);
      
      .elegant-filter-input {
        background-color: var(--surface-800);
        border-color: var(--surface-600);
        color: var(--text-color);

        &:focus {
          border-color: var(--primary-color);
          background-color: var(--surface-700);
        }

        &::placeholder {
          color: var(--text-color-secondary);
        }
      }
    }
  }

  .p-paginator {
    background: var(--surface-800);
    border-top-color: var(--surface-700);
  }
}