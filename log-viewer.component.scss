:host {
  display: block; // The component is a simple block.
}

.table-container {
  // No height or overflow needed. The parent `.results-area` handles scrolling.
  width: 100%;
}

/*
 * Use ::ng-deep but scope it inside :host to prevent styles from leaking globally.
 */
:host ::ng-deep {

  /*
   * ðŸ”¥ STICKY PAGINATOR & UPWARD DROPDOWN FIXES
   */
  .p-paginator {
    // position: sticky makes it stick to the bottom of the SCROLLING ANCESTOR,
    // which is now the `.results-area` container in the parent component.
    position: sticky;
    bottom: -1px; // A -1px value ensures the top border is hidden by the container's bottom edge.
    z-index: 10;
    background: var(--surface-card);
    border-top: 1px solid var(--surface-border);
  }

  // This targets the dropdown panel only when it's inside a paginator.
  .p-dropdown-panel {
    .p-paginator & {
      // This combination reliably forces the dropdown to open upwards.
      top: auto !important;
      bottom: 100% !important;
      margin-bottom: 4px;
    }
  }

  /*
   * CORE TABLE STYLING
   */
  .elegant-table {
    // ðŸ”¥ GUARANTEED COLUMN WIDTHS FIX:
    // This is the most important rule. It forces the browser to use the widths
    // defined in <colgroup>, not auto-calculate based on content.
    .p-datatable-table {
      table-layout: fixed !important;
    }

    // Data-dense layout with smaller fonts.
    font-size: 0.8rem;

    // Compact header cells
    .p-datatable-thead th {
      padding: 0.5rem 0.6rem;
      font-weight: 600;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      background-color: var(--surface-100);
      border-bottom: 2px solid var(--surface-border) !important;
    }
    
    // Compact filter inputs
    .filter-row th {
      padding: 0.2rem 0.4rem;
      .elegant-filter-input {
        width: 100%;
        font-size: 0.75rem;
        padding: 0.3rem 0.5rem;
      }
    }

    // Compact body cells
    .p-datatable-tbody tr td {
      padding: 0.4rem 0.6rem;
      border-bottom: 1px solid var(--surface-border);
      // Allow long text to wrap within the fixed-width cell.
      word-wrap: break-word;
      white-space: normal;
    }
  }
}

/*
 * DARK MODE THEME
 */
:host-context(.app-dark) ::ng-deep {
  .p-paginator {
    background: var(--surface-800);
    border-top-color: var(--surface-700);
  }

  .elegant-table .p-datatable-thead th {
    background-color: var(--surface-800);
    border-color: var(--surface-700);
  }
}