:host {
  // Sets up a flex container for the sticky paginator magic.
  .table-container {
    display: flex;
    flex-direction: column;
    height: 100%; // Make sure the container takes up all available vertical space.
    overflow: hidden; // Prevents double scrollbars.
  }
}

/*
 * CORE TABLE STYLES
 * Polished, elegant, and structured table theme.
 */
:host ::ng-deep .elegant-table {
  // ðŸ”¥ FIX #1: This is the most important rule for respecting column widths.
  .p-datatable-table {
    table-layout: fixed !important;
  }

  // ðŸ”¥ FIX #2: Subtle but effective borders for the entire table.
  border: 1px solid var(--surface-border);
  border-radius: 6px; // Soft rounded corners for the whole table container.
  overflow: hidden; // Clips the content to the rounded corners.

  // Header styling for a clean, unified look.
  .p-datatable-thead th {
    background-color: var(--surface-50);
    border-color: var(--surface-border);
    border-style: solid;
    border-width: 0 0 1px 0; // Only a bottom border for each header cell.
  }
  
  // Header row with display names.
  .header-row th {
    padding: 0.75rem; // Consistent padding.
    font-weight: 600;
    text-align: left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    // A subtle right border for column separation.
    &:not(:last-child) {
      border-right-width: 1px;
    }
  }

  // ðŸ”¥ FIX #2: Make the filter row compact and visually balanced.
  .filter-row th {
    padding: 0.25rem 0.5rem; // Reduced padding for a tighter look.
    background-color: var(--surface-100);

    &:not(:last-child) {
      border-right-width: 1px;
    }

    .p-column-filter {
      width: 100%;
    }

    .elegant-filter-input {
      width: 100%;
      // Make filter input height smaller to feel proportional.
      font-size: 0.875rem;
      padding: 0.4rem 0.6rem; // Reduced padding.
      border: 1px solid var(--surface-300);
      border-radius: 4px;
      transition: all 0.2s ease-in-out;

      &:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 1px var(--primary-color);
        outline: none;
      }
    }
  }

  // Body row styling.
  .elegant-row {
    .elegant-cell {
      padding: 0.6rem 0.75rem;
      border-bottom: 1px solid var(--surface-border);
      word-wrap: break-word;
      white-space: normal;

      &:not(:last-child) {
        border-right: 1px solid var(--surface-border);
      }
      
      &.clickable-cell { /* ... no changes needed here ... */ }
    }
  }
}

/*
 * ðŸ”¥ FIX #3: OPAQUE & STICKY PAGINATOR
 * This ensures the paginator stays at the bottom of its container.
 */
:host ::ng-deep .p-paginator {
  position: sticky;
  bottom: 0;
  z-index: 2;
  // Opaque background that matches the application's theme.
  background: var(--surface-card) !important;
  border-top: 1px solid var(--surface-border) !important;
  // Remove rounded corners that might look weird when stuck to the bottom.
  border-radius: 0;
}

/*
 * DARK MODE ENHANCEMENTS
 */
:host-context(.app-dark) ::ng-deep {
  .elegant-table {
    border-color: var(--surface-700);

    .p-datatable-thead th {
      background-color: var(--surface-800);
      border-color: var(--surface-700);
    }
    .filter-row {
      background-color: var(--surface-700);
      .elegant-filter-input {
        background-color: var(--surface-800);
        border-color: var(--surface-600);
      }
    }
  }

  .p-paginator {
    background: var(--surface-800) !important;
    border-top-color: var(--surface-700) !important;
  }
}