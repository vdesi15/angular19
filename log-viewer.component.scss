:host ::ng-deep .elegant-table {

  // ðŸ”¥ CRITICAL: Table layout must be fixed
  .p-datatable-table {
    table-layout: fixed !important;
    width: 100% !important;
  }

  // ðŸ”¥ FILTER ROW: The key fix
  .filter-row th {
    padding: 0.2rem 0.4rem;
    background-color: var(--surface-50);
    border-bottom-width: 2px;
    box-sizing: border-box !important;
    width: inherit !important; // Inherit from colgroup
    overflow: hidden !important; // Critical: prevent expansion

    // ðŸ”¥ KEY FIX: Force input to fit container
    .custom-column-filter,
    input[type="text"] {
      width: 100% !important;
      max-width: 100% !important;
      min-width: 0 !important;
      box-sizing: border-box !important;
      font-size: 0.75rem !important;
      padding: 0.3rem 0.5rem !important;
      border: 1px solid var(--surface-200) !important;
      border-radius: 4px !important;

      // ðŸ”¥ PREVENT: Input from determining th width
      flex-shrink: 1 !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;

      &:focus {
        border-color: var(--primary-color) !important;
        outline: none !important;
        box-shadow: 0 0 0 1px var(--primary-color) !important;
      }

      &::placeholder {
        color: var(--text-color-secondary) !important;
        font-size: 0.7rem !important;
        // ðŸ”¥ PREVENT: Long placeholder from expanding input
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        white-space: nowrap !important;
      }
    }
  }

  // Rest of your table styles
  font-size: 0.8rem;

  .p-datatable-thead th {
    background-color: var(--surface-100);
    border-bottom: 1px solid var(--surface-border) !important;
    padding: 0.5rem 0.6rem;
    font-weight: 600;
    text-align: left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    box-sizing: border-box !important;
  }

  .p-datatable-tbody tr td {
    padding: 0.4rem 0.6rem;
    border-bottom: 1px solid var(--surface-border);
    vertical-align: middle;
    box-sizing: border-box !important;
    overflow: hidden !important;

    .cell-content {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100% !important;
      box-sizing: border-box !important;
    }

    &.clickable-cell {
      color: var(--primary-color);
      cursor: pointer;
      font-weight: 500;

      &:hover {
        .cell-content {
          text-decoration: underline;
        }
      }
    }
  }

  .p-datatable-emptymessage td {
    padding: 2rem;
    text-align: center;
    color: var(--text-color-secondary);
  }
}

// Enhanced pagination
:host ::ng-deep {
  .p-datatable .p-datatable-wrapper {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .p-paginator {
    position: sticky;
    bottom: 0;
    z-index: 10;
    background: var(--surface-card);
    border-top: 1px solid var(--surface-border);
    margin-top: auto;
    font-size: 0.8rem;
    padding: 0.25rem 0.5rem;

    .p-paginator-rpp-options {
      display: none !important;
    }
  }
}

// Dark mode
:host-context(.app-dark) ::ng-deep .elegant-table {
  .p-datatable-thead th {
    background-color: var(--surface-800);
    border-color: var(--surface-700);
  }

  .filter-row th {
    background-color: var(--surface-700);

    .custom-column-filter,
    input[type="text"] {
      background-color: var(--surface-800);
      border-color: var(--surface-600);
      color: var(--text-color);

      &:focus {
        border-color: var(--primary-color);
        background-color: var(--surface-700);
      }

      &::placeholder {
        color: var(--text-color-secondary);
      }
    }
  }

  .p-paginator {
    background: var(--surface-800);
    border-top-color: var(--surface-700);
  }
}
