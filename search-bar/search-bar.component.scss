// src/app/features/search-logs/components/search-bar/search-bar.component.scss
// ================================
// KEEPING ALL EXISTING STYLES + MINIMAL ADDITIONS FOR NEW FEATURES
// ================================

:host {
  display: block;
  width: 100%;
}

// ================================
// FIXED POSITIONING SYSTEM (EXISTING - UNCHANGED)
// ================================

.search-bar-container {
  width: 100%;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  
  // CENTER POSITION - Center of screen
  &.search-bar-center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: calc(100vh - 200px);
    padding: 2rem 1rem;
    
    .search-form {
      width: 100%;
      max-width: 1200px; // Double width
    }
  }
  
  // TOP POSITION - 100px from top
  &.search-bar-top {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 1.5rem;
    margin-top: 100px; // 100px from top
    background: transparent;
    position: relative;
    
    .search-form {
      width: 100%;
      max-width: 1200px; // Double width
    }
  }
}

// ================================
// SEARCH FORM STYLING (EXISTING - UNCHANGED)
// ================================

.search-form {
  width: 100%;
  
  .search-input-group {
    display: flex;
    gap: 0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    
    &:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    &:focus-within {
      box-shadow: 0 4px 12px rgba(var(--p-primary-color-rgb), 0.2);
      transform: translateY(-1px);
    }
  }
}

// ================================
// FIXED SEARCH INPUT STYLING - MAXIMUM SPECIFICITY FOR DARK MODE (EXISTING - UNCHANGED)
// ================================

:host ::ng-deep .search-input {
  flex: 1;
  padding: 0.875rem 1.25rem;
  font-size: 1rem;
  border: none;
  border-radius: 8px 0 0 8px !important;
  background: var(--p-surface-0) !important;
  color: var(--p-text-color) !important;
  outline: none;
  
  &::placeholder {
    color: var(--p-text-muted-color) !important;
    font-style: italic;
  }
  
  &:focus {
    background: var(--p-surface-50) !important;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: var(--p-surface-100) !important;
  }
}

// ================================
// SEARCH BUTTON STYLING (EXISTING - UNCHANGED)
// ================================

:host ::ng-deep .search-button {
  padding: 0.875rem 1rem;
  border: none;
  border-radius: 0 8px 8px 0 !important;
  background: var(--p-primary-color);
  color: var(--p-primary-contrast-color);
  font-size: 1.1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:hover:not(:disabled) {
    background: var(--p-primary-700);
    transform: translateX(2px);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: var(--p-surface-300);
    transform: none;
  }
  
  &:focus {
    outline: 2px solid var(--p-primary-color);
    outline-offset: 2px;
  }
  
  i {
    font-size: 1.1rem;
  }
  
  .pi-spinner {
    animation: spin 1s linear infinite;
  }
}

// ================================
// MAXIMUM SPECIFICITY DARK MODE OVERRIDES (EXISTING - UNCHANGED)
// ================================

// HIGHEST SPECIFICITY: Component host + global dark class + deep + important
:host-context(.app-dark) ::ng-deep .search-input {
  background: #2a2a2a !important; // Fixed dark background
  color: #ffffff !important; // Fixed white text
  border: 1px solid #404040 !important;
  
  &::placeholder {
    color: #a3a3a3 !important; // Light gray placeholder
  }
  
  &:focus {
    background: #363636 !important; // Slightly lighter on focus
    border-color: var(--p-primary-color) !important;
  }
  
  &:disabled {
    background: #1a1a1a !important;
    color: #666666 !important;
  }
}

// Alternative maximum specificity approach
.app-dark :host ::ng-deep .search-input {
  background: #2a2a2a !important;
  color: #ffffff !important;
  border: 1px solid #404040 !important;
  
  &::placeholder {
    color: #a3a3a3 !important;
  }
  
  &:focus {
    background: #363636 !important;
    border-color: var(--p-primary-color) !important;
  }
  
  &:disabled {
    background: #1a1a1a !important;
    color: #666666 !important;
  }
}

// Third approach - using attribute selector for maximum specificity
:host ::ng-deep .search-input[pInputText] {
  .app-dark & {
    background: #2a2a2a !important;
    color: #ffffff !important;
    border: 1px solid #404040 !important;
    
    &::placeholder {
      color: #a3a3a3 !important;
    }
    
    &:focus {
      background: #363636 !important;
      border-color: var(--p-primary-color) !important;
    }
    
    &:disabled {
      background: #1a1a1a !important;
      color: #666666 !important;
    }
  }
}

// ================================
// NEW: SEARCH HINTS/VALIDATION STYLES (MINIMAL ADDITION)
// ================================

.search-hints {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  margin-top: 0.5rem;
  border-radius: 6px;
  font-size: 0.875rem;
  background: var(--p-yellow-50);
  color: var(--p-yellow-800);
  border: 1px solid var(--p-yellow-200);
  transition: all 0.2s ease;
  
  i {
    flex-shrink: 0;
    font-size: 0.875rem;
  }
  
  span {
    line-height: 1.4;
  }
  
  // Test cycle specific hint
  &.test-cycle-hint {
    background: var(--p-blue-50);
    color: var(--p-blue-800);
    border-color: var(--p-blue-200);
  }
  
  // Error hint for invalid input
  &.error-hint {
    background: var(--p-red-50);
    color: var(--p-red-800);
    border-color: var(--p-red-200);
  }
}

// NEW: Dark mode support for search hints
:host-context(.app-dark) .search-hints {
  background: rgba(255, 193, 7, 0.1) !important;
  color: var(--p-yellow-400) !important;
  border-color: rgba(255, 193, 7, 0.3) !important;
  
  &.test-cycle-hint {
    background: rgba(33, 150, 243, 0.1) !important;
    color: var(--p-blue-400) !important;
    border-color: rgba(33, 150, 243, 0.3) !important;
  }
  
  &.error-hint {
    background: rgba(244, 67, 54, 0.1) !important;
    color: var(--p-red-400) !important;
    border-color: rgba(244, 67, 54, 0.3) !important;
  }
}

// Alternative dark mode approach for hints
.app-dark .search-hints {
  background: rgba(255, 193, 7, 0.1) !important;
  color: var(--p-yellow-400) !important;
  border-color: rgba(255, 193, 7, 0.3) !important;
  
  &.test-cycle-hint {
    background: rgba(33, 150, 243, 0.1) !important;
    color: var(--p-blue-400) !important;
    border-color: rgba(33, 150, 243, 0.3) !important;
  }
  
  &.error-hint {
    background: rgba(244, 67, 54, 0.1) !important;
    color: var(--p-red-400) !important;
    border-color: rgba(244, 67, 54, 0.3) !important;
  }
}

// ================================
// NEW: INVALID INPUT STYLING (MINIMAL ADDITION)
// ================================

:host ::ng-deep .search-input.invalid-input {
  border-color: var(--p-red-500) !important;
  box-shadow: 0 0 0 0.2rem rgba(244, 67, 54, 0.2) !important;
  
  &:focus {
    border-color: var(--p-red-500) !important;
    box-shadow: 0 0 0 0.2rem rgba(244, 67, 54, 0.3) !important;
  }
}

// Dark mode invalid input
:host-context(.app-dark) ::ng-deep .search-input.invalid-input {
  border-color: var(--p-red-400) !important;
  box-shadow: 0 0 0 0.2rem rgba(244, 67, 54, 0.2) !important;
  
  &:focus {
    border-color: var(--p-red-400) !important;
    box-shadow: 0 0 0 0.2rem rgba(244, 67, 54, 0.3) !important;
  }
}

// ================================
// ANIMATIONS (EXISTING - UNCHANGED)
// ================================

@keyframes spin {
  from { 
    transform: rotate(0deg); 
  }
  to { 
    transform: rotate(360deg); 
  }
}

// ================================
// RESPONSIVE DESIGN (EXISTING - UNCHANGED)
// ================================

@media (max-width: 1024px) {
  .search-bar-container {
    &.search-bar-center {
      padding: 1.5rem 1rem;
      
      .search-form {
        max-width: 800px;
      }
    }
    
    &.search-bar-top {
      padding: 0.75rem 1rem;
      margin-top: 80px;
      
      .search-form {
        max-width: 800px;
      }
    }
  }
}

@media (max-width: 768px) {
  .search-bar-container {
    &.search-bar-center {
      padding: 1rem 0.75rem;
      min-height: calc(100vh - 150px);
      
      .search-form {
        max-width: 100%;
      }
    }
    
    &.search-bar-top {
      padding: 0.75rem;
      margin-top: 60px;
      
      .search-form {
        max-width: 100%;
      }
    }
  }
  
  :host ::ng-deep .search-input {
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
  }
  
  :host ::ng-deep .search-button {
    padding: 0.75rem 0.875rem;
    min-width: 45px;
    font-size: 1rem;
    
    i {
      font-size: 1rem;
    }
  }
  
  // NEW: Responsive search hints
  .search-hints {
    padding: 0.4rem 0.6rem;
    font-size: 0.8rem;
    margin-top: 0.4rem;
    
    i {
      font-size: 0.8rem;
    }
  }
}

@media (max-width: 480px) {
  .search-bar-container {
    &.search-bar-center {
      padding: 0.75rem 0.5rem;
    }
    
    &.search-bar-top {
      padding: 0.5rem;
      margin-top: 40px;
    }
  }
  
  .search-form {
    .search-input-group {
      flex-direction: column;
      
      :host ::ng-deep .search-input {
        border-radius: 8px 8px 0 0 !important;
        font-size: 16px; // Prevent iOS zoom
      }
      
      :host ::ng-deep .search-button {
        border-radius: 0 0 8px 8px !important;
        min-width: 45px;
        transform: none;
        
        &:hover:not(:disabled) {
          transform: none;
        }
      }
    }
  }
  
  // NEW: Mobile search hints
  .search-hints {
    padding: 0.35rem 0.5rem;
    font-size: 0.75rem;
    border-radius: 4px;
    
    i {
      font-size: 0.75rem;
    }
    
    span {
      line-height: 1.3;
    }
  }
}

// ================================
// NEW: ACCESSIBILITY IMPROVEMENTS (MINIMAL ADDITION)
// ================================

// High contrast mode support
@media (prefers-contrast: high) {
  .search-hints {
    border-width: 2px;
    font-weight: 500;
  }
  
  :host ::ng-deep .search-input.invalid-input {
    border-width: 2px !important;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .search-bar-container {
    transition: none;
  }
  
  .search-form .search-input-group {
    transition: none;
    
    &:focus-within {
      transform: none;
    }
  }
  
  :host ::ng-deep .search-button {
    transition: none;
    
    &:hover:not(:disabled) {
      transform: none;
    }
  }
  
  .search-hints {
    transition: none;
  }
  
  .pi-spinner {
    animation: none;
  }
}

// ================================
// NEW: FOCUS MANAGEMENT FOR ACCESSIBILITY
// ================================

// Improved focus indicators
:host ::ng-deep .search-input:focus {
  outline: 2px solid var(--p-primary-color);
  outline-offset: 1px;
}

// Focus trap for search hints
.search-hints:focus {
  outline: 2px solid var(--p-primary-color);
  outline-offset: 2px;
}

// ================================
// PRINT STYLES (MINIMAL ADDITION)
// ================================

@media print {
  .search-bar-container {
    box-shadow: none !important;
    background: white !important;
  }
  
  .search-hints {
    background: #f5f5f5 !important;
    color: #333 !important;
    border: 1px solid #ccc !important;
  }
  
  :host ::ng-deep .search-input {
    background: white !important;
    color: black !important;
    border: 1px solid #ccc !important;
  }
  
  :host ::ng-deep .search-button {
    background: #666 !important;
    color: white !important;
  }
}